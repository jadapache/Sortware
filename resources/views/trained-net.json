export default function anonymous(rawInput
) {

  var input = lookupInput(rawInput);
  var json = {"type":"LSTMTimeStep","options":{"inputSize":2,"hiddenLayers":[3,5,7,2],"outputSize":2,"decayRate":0.999,"smoothEps":1e-8,"regc":0.000001,"clipval":5},"hiddenLayers":[{"inputMatrix":{"rows":3,"columns":2,"weights":{"0":1.740067481994629,"1":1.7441142797470093,"2":1.3512051105499268,"3":1.1942787170410156,"4":-0.06587890535593033,"5":-0.04955625161528587}},"inputHidden":{"rows":3,"columns":3,"weights":{"0":-0.24477483332157135,"1":0.11644696444272995,"2":-0.05711216479539871,"3":-0.6019889116287231,"4":0.29314130544662476,"5":-0.03949369862675667,"6":-0.08941906690597534,"7":0.005828795023262501,"8":0.07345501333475113}},"inputBias":{"rows":3,"columns":1,"weights":{"0":-0.06453976780176163,"1":-1.069322109222412,"2":-0.017666451632976532}},"forgetMatrix":{"rows":3,"columns":2,"weights":{"0":0.4700603187084198,"1":0.4243588447570801,"2":0.46114665269851685,"3":0.5203757286071777,"4":-0.06640022993087769,"5":-0.06409311294555664}},"forgetHidden":{"rows":3,"columns":3,"weights":{"0":0.8983463048934937,"1":1.2519930601119995,"2":-0.20881474018096924,"3":1.1980887651443481,"4":-1.186449408531189,"5":0.36239585280418396,"6":0.02857665903866291,"7":-0.057512544095516205,"8":-0.024468084797263145}},"forgetBias":{"rows":3,"columns":1,"weights":{"0":0,"1":0,"2":0}},"outputMatrix":{"rows":3,"columns":2,"weights":{"0":2.0271360874176025,"1":2.0448529720306396,"2":1.8366855382919312,"3":1.5270007848739624,"4":-0.016736922785639763,"5":-0.1250709742307663}},"outputHidden":{"rows":3,"columns":3,"weights":{"0":0.039708711206912994,"1":0.2907859683036804,"2":-0.24438932538032532,"3":0.1257181614637375,"4":-0.7535883784294128,"5":0.11960860341787338,"6":-0.1412414163351059,"7":0.028216438367962837,"8":0.03303014487028122}},"outputBias":{"rows":3,"columns":1,"weights":{"0":-0.07219748198986053,"1":-0.7939631342887878,"2":-0.01805082894861698}},"cellActivationMatrix":{"rows":3,"columns":2,"weights":{"0":-1.9424437284469604,"1":1.3895457983016968,"2":-1.6203835010528564,"3":0.08447375893592834,"4":0.02351418510079384,"5":0.31683453917503357}},"cellActivationHidden":{"rows":3,"columns":3,"weights":{"0":-0.08096616715192795,"1":-1.024359941482544,"2":0.072438083589077,"3":1.1737483739852905,"4":0.9852652549743652,"5":-0.01262038853019476,"6":-0.2740759253501892,"7":-0.2864748239517212,"8":0.024639882147312164}},"cellActivationBias":{"rows":3,"columns":1,"weights":{"0":0.07746055722236633,"1":0.8563560247421265,"2":-0.23641005158424377}}},{"inputMatrix":{"rows":5,"columns":3,"weights":{"0":-0.9705551862716675,"1":0.3303050696849823,"2":-0.07290461659431458,"3":0.26345095038414,"4":-0.240341916680336,"5":0.001082477974705398,"6":-0.12449055910110474,"7":-0.2567582428455353,"8":0.06138871982693672,"9":-1.0625063180923462,"10":-0.35683757066726685,"11":0.04535571485757828,"12":-1.8348743915557861,"13":-1.6178154945373535,"14":0.19554075598716736}},"inputHidden":{"rows":5,"columns":5,"weights":{"0":-0.12939147651195526,"1":-0.05233721807599068,"2":-0.011167372576892376,"3":0.02699211984872818,"4":-0.848190426826477,"5":-0.24029909074306488,"6":0.04211582988500595,"7":0.026112237945199013,"8":-0.044458966702222824,"9":-0.22560438513755798,"10":-0.26596352458000183,"11":-0.028619853779673576,"12":-0.005823881831020117,"13":-0.028725456446409225,"14":-0.16649353504180908,"15":-0.5909132957458496,"16":-0.07517333328723907,"17":-0.014007240533828735,"18":-0.13030537962913513,"19":-0.9697657227516174,"20":-0.6061016321182251,"21":0.09574805200099945,"22":-0.024117406457662582,"23":-0.32936331629753113,"24":-0.8064904808998108}},"inputBias":{"rows":5,"columns":1,"weights":{"0":0.06067647039890289,"1":-0.1107482984662056,"2":-0.0032975904177874327,"3":-0.05218672379851341,"4":0.5017644762992859}},"forgetMatrix":{"rows":5,"columns":3,"weights":{"0":-0.21702632308006287,"1":-0.05932503566145897,"2":-0.00472443038597703,"3":0.16587646305561066,"4":0.13336093723773956,"5":-0.018597766757011414,"6":-0.16092808544635773,"7":-0.03309333324432373,"8":-0.07433412224054337,"9":-0.08003683388233185,"10":0.07758394628763199,"11":0.03793599084019661,"12":-1.1388810873031616,"13":0.7017187476158142,"14":-0.1357799768447876}},"forgetHidden":{"rows":5,"columns":5,"weights":{"0":-0.07573205232620239,"1":0.0037024333141744137,"2":0.01124188955873251,"3":-0.02068687416613102,"4":-0.18849800527095795,"5":-0.044819530099630356,"6":-0.0008568978519178927,"7":-0.0630352571606636,"8":0.14783525466918945,"9":0.001877638977020979,"10":-0.09652496874332428,"11":0.07724489271640778,"12":-0.10502547770738602,"13":0.04715155065059662,"14":-0.003303369041532278,"15":-0.30271223187446594,"16":-0.052932366728782654,"17":0.027532218024134636,"18":-0.17387442290782928,"19":0.047599680721759796,"20":0.6202759742736816,"21":0.3764229416847229,"22":-0.5293166041374207,"23":1.0599359273910522,"24":0.7027642130851746}},"forgetBias":{"rows":5,"columns":1,"weights":{"0":0,"1":0,"2":0,"3":0,"4":0}},"outputMatrix":{"rows":5,"columns":3,"weights":{"0":-1.0633405447006226,"1":0.2552739381790161,"2":-0.09707457572221756,"3":0.2311917245388031,"4":0.05928283929824829,"5":-0.08635016530752182,"6":-0.20421849191188812,"7":-0.22989346086978912,"8":0.010618943721055984,"9":-1.2169075012207031,"10":-0.30169597268104553,"11":-0.02272828295826912,"12":-2.7992825508117676,"13":-1.5643101930618286,"14":0.032180625945329666}},"outputHidden":{"rows":5,"columns":5,"weights":{"0":-0.3584352731704712,"1":-0.14883458614349365,"2":0.015876945108175278,"3":-0.03998129069805145,"4":-0.9365136623382568,"5":-0.22215192019939423,"6":0.051045335829257965,"7":-0.01514121051877737,"8":0.061573274433612823,"9":-0.2911830246448517,"10":-0.3037811517715454,"11":-0.10628457367420197,"12":0.06600328534841537,"13":0.022968467324972153,"14":-0.1895228624343872,"15":-1.033599615097046,"16":-0.0059020924381911755,"17":0.10856925696134567,"18":-0.4963601231575012,"19":-0.9722297787666321,"20":-0.3332713544368744,"21":0.28183794021606445,"22":-0.258560448884964,"23":0.25526532530784607,"24":-0.5688093900680542}},"outputBias":{"rows":5,"columns":1,"weights":{"0":0.06191291660070419,"1":-0.11544956266880035,"2":-0.0031210898887366056,"3":-0.05246549844741821,"4":0.5234555006027222}},"cellActivationMatrix":{"rows":5,"columns":3,"weights":{"0":1.0756365060806274,"1":0.5788124203681946,"2":0.07646925747394562,"3":1.5459898710250854,"4":1.1383451223373413,"5":-0.33379852771759033,"6":-0.9153360724449158,"7":-0.8289481401443481,"8":0.2024572491645813,"9":1.0802756547927856,"10":1.5661444664001465,"11":-0.2563599944114685,"12":2.355753183364868,"13":-0.29725614190101624,"14":0.25068625807762146}},"cellActivationHidden":{"rows":5,"columns":5,"weights":{"0":0.3431268036365509,"1":0.12072989344596863,"2":0.027197565883398056,"3":0.0853169709444046,"4":0.835946261882782,"5":0.37625518441200256,"6":0.15478652715682983,"7":0.006055381149053574,"8":0.12359876930713654,"9":0.38954034447669983,"10":-0.3268083930015564,"11":-0.14288687705993652,"12":-0.06173080578446388,"13":-0.13828840851783752,"14":-0.5066100358963013,"15":0.5265719294548035,"16":0.35116398334503174,"17":-0.20299915969371796,"18":0.2093648463487625,"19":0.8125307559967041,"20":-0.987305760383606,"21":-0.38284891843795776,"22":0.6050683856010437,"23":-1.9999279975891113,"24":-1.7332861423492432}},"cellActivationBias":{"rows":5,"columns":1,"weights":{"0":0.08289559185504913,"1":-0.5780795216560364,"2":0.4085879325866699,"3":-0.12424314767122269,"4":-1.4734437465667725}}},{"inputMatrix":{"rows":7,"columns":5,"weights":{"0":-0.6410924792289734,"1":-0.33628907799720764,"2":0.1257960945367813,"3":-0.5907717347145081,"4":-0.9685664176940918,"5":-0.705570638179779,"6":-0.31225714087486267,"7":0.2141966074705124,"8":-0.48001378774642944,"9":-1.0833817720413208,"10":-0.7008872032165527,"11":-0.4095582067966461,"12":0.10566823184490204,"13":-0.6676413416862488,"14":-1.2713192701339722,"15":-0.5538656115531921,"16":-0.37118402123451233,"17":0.12284556776285172,"18":-0.5596820712089539,"19":-1.1408146619796753,"20":-0.27333012223243713,"21":-0.20781250298023224,"22":0.1586550921201706,"23":-0.3118121922016144,"24":-0.7280945181846619,"25":-0.5849443078041077,"26":-0.21129336953163147,"27":0.1398097723722458,"28":-0.4117021858692169,"29":-1.0623282194137573,"30":-0.3067397177219391,"31":-0.24550658464431763,"32":0.057925935834646225,"33":-0.29147469997406006,"34":-0.6355973482131958}},"inputHidden":{"rows":7,"columns":7,"weights":{"0":0.010321573354303837,"1":0.0772850438952446,"2":-0.0415196418762207,"3":0.031000012531876564,"4":-0.08273039758205414,"5":-0.06364553421735764,"6":-0.106105275452137,"7":0.06894506514072418,"8":0.04231899231672287,"9":-0.043896500021219254,"10":0.046539556235075,"11":-0.09551557153463364,"12":-0.05431842803955078,"13":-0.05125366896390915,"14":0.060812924057245255,"15":0.052301205694675446,"16":-0.03803360089659691,"17":-0.0374424122273922,"18":-0.015236512757837772,"19":-0.07375288754701614,"20":-0.05220818892121315,"21":-0.03335375338792801,"22":0.02857077494263649,"23":0.042932238429784775,"24":0.005032053682953119,"25":0.009096191264688969,"26":-0.08859800547361374,"27":-0.01935463398694992,"28":0.1341302990913391,"29":0.0807020366191864,"30":0.03595385327935219,"31":0.08445695787668228,"32":-0.07628416270017624,"33":-0.07774195820093155,"34":-0.0969567522406578,"35":0.09018141776323318,"36":0.010102142579853535,"37":-0.029125677421689034,"38":-0.04517718777060509,"39":-0.033822547644376755,"40":-0.06612908840179443,"41":-0.10239934921264648,"42":0.1477936953306198,"43":0.0492146760225296,"44":-0.03394059091806412,"45":0.014804625883698463,"46":-0.14053943753242493,"47":-0.021073268726468086,"48":-0.0794462040066719}},"inputBias":{"rows":7,"columns":1,"weights":{"0":0.16894786059856415,"1":0.19531846046447754,"2":0.2056557685136795,"3":0.20606955885887146,"4":0.05043759569525719,"5":0.06808401644229889,"6":0.07378904521465302}},"forgetMatrix":{"rows":7,"columns":5,"weights":{"0":-0.07950275391340256,"1":-0.03158722445368767,"2":0.06303275376558304,"3":0.05061276629567146,"4":-0.5425602793693542,"5":-0.06471621990203857,"6":-0.07548924535512924,"7":-0.020095527172088623,"8":-0.03909090533852577,"9":-0.5566093325614929,"10":0.05731173977255821,"11":-0.17189531028270721,"12":0.011543798260390759,"13":0.01958651840686798,"14":-0.6091113686561584,"15":0.08997950702905655,"16":-0.1467450112104416,"17":0.09526373445987701,"18":0.012661973014473915,"19":-0.5648653507232666,"20":-0.023756736889481544,"21":-0.06108015403151512,"22":0.08041921257972717,"23":0.024490617215633392,"24":-0.2600753903388977,"25":-0.09155308455228806,"26":-0.09792916476726532,"27":0.05357728525996208,"28":-0.061867401003837585,"29":-0.4364859461784363,"30":-0.05016324669122696,"31":-0.019529972225427628,"32":0.04188358783721924,"33":-0.0320601761341095,"34":-0.1972326934337616}},"forgetHidden":{"rows":7,"columns":7,"weights":{"0":0.24574823677539825,"1":0.20124004781246185,"2":-0.16514091193675995,"3":0.24827218055725098,"4":-0.18133771419525146,"5":-0.15308348834514618,"6":-0.2262362539768219,"7":0.24873489141464233,"8":0.0944565013051033,"9":-0.15674930810928345,"10":0.16276566684246063,"11":-0.14545953273773193,"12":-0.14983148872852325,"13":-0.14009128510951996,"14":0.1580251008272171,"15":0.12026747316122055,"16":-0.18561598658561707,"17":0.19157715141773224,"18":-0.1469014286994934,"19":-0.2431315928697586,"20":-0.141829252243042,"21":0.23472636938095093,"22":0.15030047297477722,"23":-0.1183360293507576,"24":0.1701820194721222,"25":-0.2420964539051056,"26":-0.20868657529354095,"27":-0.15932369232177734,"28":0.23465566337108612,"29":0.15590119361877441,"30":-0.07876258343458176,"31":0.17058618366718292,"32":-0.1575549840927124,"33":-0.1807325929403305,"34":-0.12195933610200882,"35":0.11277633905410767,"36":0.1690213531255722,"37":-0.18557366728782654,"38":0.16372400522232056,"39":-0.08894082903862,"40":-0.11654242873191833,"41":-0.19387666881084442,"42":0.21059152483940125,"43":0.0911613181233406,"44":-0.10907736420631409,"45":0.07668796181678772,"46":-0.2401699721813202,"47":-0.19381102919578552,"48":-0.12633705139160156}},"forgetBias":{"rows":7,"columns":1,"weights":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}},"outputMatrix":{"rows":7,"columns":5,"weights":{"0":-0.589048445224762,"1":-0.41798028349876404,"2":0.20679648220539093,"3":-0.5847756862640381,"4":-1.2704060077667236,"5":-0.6119993925094604,"6":-0.33978793025016785,"7":0.09312763065099716,"8":-0.5656089186668396,"9":-1.4019348621368408,"10":-0.6278520822525024,"11":-0.4560295641422272,"12":0.1658119559288025,"13":-0.5320048332214355,"14":-1.5547019243240356,"15":-0.6132810115814209,"16":-0.39708229899406433,"17":0.2448437660932541,"18":-0.48951900005340576,"19":-1.4104610681533813,"20":-0.38709837198257446,"21":-0.22939808666706085,"22":0.14962832629680634,"23":-0.3295353949069977,"24":-0.9222224950790405,"25":-0.5374135971069336,"26":-0.3029792308807373,"27":0.12322182953357697,"28":-0.5366290211677551,"29":-1.3682676553726196,"30":-0.25056371092796326,"31":-0.23604799807071686,"32":0.10696952044963837,"33":-0.1957169771194458,"34":-0.8772510290145874}},"outputHidden":{"rows":7,"columns":7,"weights":{"0":0.09502709656953812,"1":-0.03836933150887489,"2":-0.0392129123210907,"3":-0.011532868258655071,"4":0.027726463973522186,"5":-0.005405109841376543,"6":-0.07440969347953796,"7":-0.02268563210964203,"8":0.044756270945072174,"9":0.08326686173677444,"10":0.041880715638399124,"11":-0.09619913250207901,"12":0.008602225221693516,"13":-0.09624438732862473,"14":-0.024179505184292793,"15":0.037553753703832626,"16":-0.0003849105560220778,"17":0.04821968451142311,"18":0.01273298542946577,"19":-0.07840688526630402,"20":0.05396915599703789,"21":0.03970270976424217,"22":-0.03732588142156601,"23":0.001991790719330311,"24":-0.04166333004832268,"25":-0.08390367031097412,"26":0.04133659973740578,"27":-0.0012195584131404757,"28":0.12337905168533325,"29":-0.0226766187697649,"30":-0.060160666704177856,"31":0.03766350448131561,"32":-0.01405103038996458,"33":-0.021561436355113983,"34":-0.022907432168722153,"35":0.05893710255622864,"36":-0.01226849015802145,"37":-0.0008284208015538752,"38":0.05423364043235779,"39":-0.09601891040802002,"40":-0.04573959857225418,"41":-0.025790156796574593,"42":0.03526239097118378,"43":0.09387463331222534,"44":0.010382337495684624,"45":0.014284122735261917,"46":-0.13519160449504852,"47":-0.11386635154485703,"48":-0.04166549816727638}},"outputBias":{"rows":7,"columns":1,"weights":{"0":0.16984327137470245,"1":0.19857707619667053,"2":0.20629291236400604,"3":0.21071873605251312,"4":0.05176762863993645,"5":0.06646047532558441,"6":0.07267860323190689}},"cellActivationMatrix":{"rows":7,"columns":5,"weights":{"0":-0.1860218197107315,"1":0.6151850819587708,"2":-0.2922874689102173,"3":0.4742521345615387,"4":1.1299570798873901,"5":-0.1845986694097519,"6":0.5920831561088562,"7":-0.2990659475326538,"8":0.5209577679634094,"9":1.3654515743255615,"10":0.25675737857818604,"11":-0.6668506860733032,"12":0.4477650821208954,"13":-0.5754015445709229,"14":-1.5477964878082275,"15":-0.21411548554897308,"16":0.7322288751602173,"17":-0.31517040729522705,"18":0.5385540723800659,"19":1.4953070878982544,"20":0.04743675887584686,"21":-0.40726178884506226,"22":0.2877081334590912,"23":-0.3915260434150696,"24":-0.8193898797035217,"25":0.25332075357437134,"26":-0.6714159846305847,"27":0.36452263593673706,"28":-0.508578896522522,"29":-1.002443552017212,"30":0.028421852737665176,"31":-0.3478700816631317,"32":0.24325941503047943,"33":-0.3928719758987427,"34":-0.7551343441009521}},"cellActivationHidden":{"rows":7,"columns":7,"weights":{"0":-0.15370093286037445,"1":-0.06868236511945724,"2":0.06177123263478279,"3":-0.050721827894449234,"4":0.056678175926208496,"5":0.20291177928447723,"6":0.16909025609493256,"7":-0.12450368702411652,"8":-0.016224756836891174,"9":0.09151734411716461,"10":0.037436194717884064,"11":0.17123334109783173,"12":0.20517176389694214,"13":0.17274028062820435,"14":0.04530848190188408,"15":0.04792060703039169,"16":-0.033198971301317215,"17":0.11487852782011032,"18":-0.10830479115247726,"19":-0.17787206172943115,"20":-0.05830192193388939,"21":-0.07942928373813629,"22":-0.04411110654473305,"23":0.05695357173681259,"24":0.021626455709338188,"25":0.19331735372543335,"26":0.1362067461013794,"27":0.14713257551193237,"28":0.06760647147893906,"29":-0.02727169170975685,"30":0.06329229474067688,"31":-0.03973596170544624,"32":0.013218970037996769,"33":-0.0042619407176971436,"34":0.009469226934015751,"35":0.05683290958404541,"36":0.04099179804325104,"37":0.0278096254914999,"38":-0.03875499591231346,"39":-0.07777257263660431,"40":-0.07351360470056534,"41":-0.016482045873999596,"42":0.05709671229124069,"43":0.03912036493420601,"44":-0.002416781848296523,"45":-0.09964567422866821,"46":0.004430829081684351,"47":-0.053122371435165405,"48":-0.026565702632069588}},"cellActivationBias":{"rows":7,"columns":1,"weights":{"0":-0.3863558769226074,"1":-0.38170135021209717,"2":0.34914231300354004,"3":-0.3718889057636261,"4":0.27647536993026733,"5":0.28720468282699585,"6":0.31093043088912964}}},{"inputMatrix":{"rows":2,"columns":7,"weights":{"0":-0.2971937656402588,"1":-0.43167567253112793,"2":0.45680418610572815,"3":-0.3973022699356079,"4":0.18270084261894226,"5":0.32349422574043274,"6":0.15539631247520447,"7":-0.43211525678634644,"8":-0.4822224974632263,"9":0.4025580883026123,"10":-0.4589840769767761,"11":0.26951003074645996,"12":0.3323608934879303,"13":0.1576414406299591}},"inputHidden":{"rows":2,"columns":2,"weights":{"0":0.19884388148784637,"1":-0.09815028309822083,"2":0.19040241837501526,"3":-0.03335389494895935}},"inputBias":{"rows":2,"columns":1,"weights":{"0":0.5113674998283386,"1":0.3062818944454193}},"forgetMatrix":{"rows":2,"columns":7,"weights":{"0":-0.18794465065002441,"1":-0.1705980747938156,"2":0.2848743796348572,"3":-0.18663707375526428,"4":0.05976211652159691,"5":0.2065332978963852,"6":0.03361939266324043,"7":-0.3197484314441681,"8":-0.2990972399711609,"9":0.3178606927394867,"10":-0.33357319235801697,"11":0.1607462763786316,"12":0.18127231299877167,"13":0.08530758321285248}},"forgetHidden":{"rows":2,"columns":2,"weights":{"0":0.09680119156837463,"1":0.007007467560470104,"2":0.0010054173180833459,"3":0.05455290526151657}},"forgetBias":{"rows":2,"columns":1,"weights":{"0":0,"1":0}},"outputMatrix":{"rows":2,"columns":7,"weights":{"0":-0.2904122769832611,"1":-0.3325246572494507,"2":0.29449474811553955,"3":-0.3692256808280945,"4":0.14853264391422272,"5":0.2845621407032013,"6":0.20974542200565338,"7":-0.3496626317501068,"8":-0.36045020818710327,"9":0.4840761423110962,"10":-0.3612655699253082,"11":0.23079556226730347,"12":0.379890114068985,"13":0.18947991728782654}},"outputHidden":{"rows":2,"columns":2,"weights":{"0":0.1681336760520935,"1":-0.0018735234625637531,"2":0.22188283503055573,"3":-0.05101886764168739}},"outputBias":{"rows":2,"columns":1,"weights":{"0":0.5605143904685974,"1":0.34619686007499695}},"cellActivationMatrix":{"rows":2,"columns":7,"weights":{"0":-0.4543710947036743,"1":-0.41553008556365967,"2":0.5089722275733948,"3":-0.4429289996623993,"4":0.4419935345649719,"5":0.40848323702812195,"6":0.39910000562667847,"7":0.40901461243629456,"8":0.45159003138542175,"9":-0.5479453802108765,"10":0.5166868567466736,"11":-0.33192235231399536,"12":-0.3322684168815613,"13":-0.3344459533691406}},"cellActivationHidden":{"rows":2,"columns":2,"weights":{"0":0.4154684841632843,"1":-0.3655788004398346,"2":-0.3324926495552063,"3":0.3306880295276642}},"cellActivationBias":{"rows":2,"columns":1,"weights":{"0":0.6262738704681396,"1":-0.36775317788124084}}}],"outputConnector":{"rows":2,"columns":2,"weights":{"0":0.4829216003417969,"1":-0.6401808857917786,"2":0.03322674334049225,"3":0.032730262726545334}},"output":{"rows":2,"columns":1,"weights":{"0":0.12452496588230133,"1":0.9978359937667847}},"inputLookup":{"unidades":0,"precio":1},"inputLookupLength":2,"outputLookup":{"unidades":0,"precio":1},"outputLookupLength":2};
  var output = [];
  var states = [];
  var prevStates;
  var state;
  var max = input.length;
  for (var _i = 0; _i < max; _i++) {
    prevStates = states;
    states = [];
    states[0] = {
      name: 'forwardFn',
      left: null,
      right: null,
      product: new Matrix(2, 1)
    };
    states[1] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputMatrix,
      right: states[0].product,
      product: new Matrix(3, 1)
    };
    states[2] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputHidden,
      right: typeof prevStates[25] === 'object' ? prevStates[25].product : new Matrix(3, 1),
      product: new Matrix(3, 1)
    };
    states[3] = {
      name: 'add',
      left: states[1].product,
      right: states[2].product,
      product: new Matrix(3, 1)
    };
    states[4] = {
      name: 'add',
      left: states[3].product,
      right: json.hiddenLayers[0].inputBias,
      product: new Matrix(3, 1)
    };
    states[5] = {
      name: 'sigmoid',
      left: states[4].product,
      right: null,
      product: new Matrix(3, 1)
    };
    states[6] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetMatrix,
      right: states[0].product,
      product: new Matrix(3, 1)
    };
    states[7] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetHidden,
      right: states[2].right,
      product: new Matrix(3, 1)
    };
    states[8] = {
      name: 'add',
      left: states[6].product,
      right: states[7].product,
      product: new Matrix(3, 1)
    };
    states[9] = {
      name: 'add',
      left: states[8].product,
      right: json.hiddenLayers[0].forgetBias,
      product: new Matrix(3, 1)
    };
    states[10] = {
      name: 'sigmoid',
      left: states[9].product,
      right: null,
      product: new Matrix(3, 1)
    };
    states[11] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputMatrix,
      right: states[0].product,
      product: new Matrix(3, 1)
    };
    states[12] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputHidden,
      right: states[2].right,
      product: new Matrix(3, 1)
    };
    states[13] = {
      name: 'add',
      left: states[11].product,
      right: states[12].product,
      product: new Matrix(3, 1)
    };
    states[14] = {
      name: 'add',
      left: states[13].product,
      right: json.hiddenLayers[0].outputBias,
      product: new Matrix(3, 1)
    };
    states[15] = {
      name: 'sigmoid',
      left: states[14].product,
      right: null,
      product: new Matrix(3, 1)
    };
    states[16] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationMatrix,
      right: states[0].product,
      product: new Matrix(3, 1)
    };
    states[17] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationHidden,
      right: states[2].right,
      product: new Matrix(3, 1)
    };
    states[18] = {
      name: 'add',
      left: states[16].product,
      right: states[17].product,
      product: new Matrix(3, 1)
    };
    states[19] = {
      name: 'add',
      left: states[18].product,
      right: json.hiddenLayers[0].cellActivationBias,
      product: new Matrix(3, 1)
    };
    states[20] = {
      name: 'tanh',
      left: states[19].product,
      right: null,
      product: new Matrix(3, 1)
    };
    states[21] = {
      name: 'multiplyElement',
      left: states[10].product,
      right: states[2].right,
      product: new Matrix(3, 1)
    };
    states[22] = {
      name: 'multiplyElement',
      left: states[5].product,
      right: states[20].product,
      product: new Matrix(3, 1)
    };
    states[23] = {
      name: 'add',
      left: states[21].product,
      right: states[22].product,
      product: new Matrix(3, 1)
    };
    states[24] = {
      name: 'tanh',
      left: states[23].product,
      right: null,
      product: new Matrix(3, 1)
    };
    states[25] = {
      name: 'multiplyElement',
      left: states[15].product,
      right: states[24].product,
      product: new Matrix(3, 1)
    };
    states[26] = {
      name: 'multiply',
      left: json.hiddenLayers[1].inputMatrix,
      right: states[25].product,
      product: new Matrix(5, 1)
    };
    states[27] = {
      name: 'multiply',
      left: json.hiddenLayers[1].inputHidden,
      right: typeof prevStates[50] === 'object' ? prevStates[50].product : new Matrix(5, 1),
      product: new Matrix(5, 1)
    };
    states[28] = {
      name: 'add',
      left: states[26].product,
      right: states[27].product,
      product: new Matrix(5, 1)
    };
    states[29] = {
      name: 'add',
      left: states[28].product,
      right: json.hiddenLayers[1].inputBias,
      product: new Matrix(5, 1)
    };
    states[30] = {
      name: 'sigmoid',
      left: states[29].product,
      right: null,
      product: new Matrix(5, 1)
    };
    states[31] = {
      name: 'multiply',
      left: json.hiddenLayers[1].forgetMatrix,
      right: states[25].product,
      product: new Matrix(5, 1)
    };
    states[32] = {
      name: 'multiply',
      left: json.hiddenLayers[1].forgetHidden,
      right: states[27].right,
      product: new Matrix(5, 1)
    };
    states[33] = {
      name: 'add',
      left: states[31].product,
      right: states[32].product,
      product: new Matrix(5, 1)
    };
    states[34] = {
      name: 'add',
      left: states[33].product,
      right: json.hiddenLayers[1].forgetBias,
      product: new Matrix(5, 1)
    };
    states[35] = {
      name: 'sigmoid',
      left: states[34].product,
      right: null,
      product: new Matrix(5, 1)
    };
    states[36] = {
      name: 'multiply',
      left: json.hiddenLayers[1].outputMatrix,
      right: states[25].product,
      product: new Matrix(5, 1)
    };
    states[37] = {
      name: 'multiply',
      left: json.hiddenLayers[1].outputHidden,
      right: states[27].right,
      product: new Matrix(5, 1)
    };
    states[38] = {
      name: 'add',
      left: states[36].product,
      right: states[37].product,
      product: new Matrix(5, 1)
    };
    states[39] = {
      name: 'add',
      left: states[38].product,
      right: json.hiddenLayers[1].outputBias,
      product: new Matrix(5, 1)
    };
    states[40] = {
      name: 'sigmoid',
      left: states[39].product,
      right: null,
      product: new Matrix(5, 1)
    };
    states[41] = {
      name: 'multiply',
      left: json.hiddenLayers[1].cellActivationMatrix,
      right: states[25].product,
      product: new Matrix(5, 1)
    };
    states[42] = {
      name: 'multiply',
      left: json.hiddenLayers[1].cellActivationHidden,
      right: states[27].right,
      product: new Matrix(5, 1)
    };
    states[43] = {
      name: 'add',
      left: states[41].product,
      right: states[42].product,
      product: new Matrix(5, 1)
    };
    states[44] = {
      name: 'add',
      left: states[43].product,
      right: json.hiddenLayers[1].cellActivationBias,
      product: new Matrix(5, 1)
    };
    states[45] = {
      name: 'tanh',
      left: states[44].product,
      right: null,
      product: new Matrix(5, 1)
    };
    states[46] = {
      name: 'multiplyElement',
      left: states[35].product,
      right: states[27].right,
      product: new Matrix(5, 1)
    };
    states[47] = {
      name: 'multiplyElement',
      left: states[30].product,
      right: states[45].product,
      product: new Matrix(5, 1)
    };
    states[48] = {
      name: 'add',
      left: states[46].product,
      right: states[47].product,
      product: new Matrix(5, 1)
    };
    states[49] = {
      name: 'tanh',
      left: states[48].product,
      right: null,
      product: new Matrix(5, 1)
    };
    states[50] = {
      name: 'multiplyElement',
      left: states[40].product,
      right: states[49].product,
      product: new Matrix(5, 1)
    };
    states[51] = {
      name: 'multiply',
      left: json.hiddenLayers[2].inputMatrix,
      right: states[50].product,
      product: new Matrix(7, 1)
    };
    states[52] = {
      name: 'multiply',
      left: json.hiddenLayers[2].inputHidden,
      right: typeof prevStates[75] === 'object' ? prevStates[75].product : new Matrix(7, 1),
      product: new Matrix(7, 1)
    };
    states[53] = {
      name: 'add',
      left: states[51].product,
      right: states[52].product,
      product: new Matrix(7, 1)
    };
    states[54] = {
      name: 'add',
      left: states[53].product,
      right: json.hiddenLayers[2].inputBias,
      product: new Matrix(7, 1)
    };
    states[55] = {
      name: 'sigmoid',
      left: states[54].product,
      right: null,
      product: new Matrix(7, 1)
    };
    states[56] = {
      name: 'multiply',
      left: json.hiddenLayers[2].forgetMatrix,
      right: states[50].product,
      product: new Matrix(7, 1)
    };
    states[57] = {
      name: 'multiply',
      left: json.hiddenLayers[2].forgetHidden,
      right: states[52].right,
      product: new Matrix(7, 1)
    };
    states[58] = {
      name: 'add',
      left: states[56].product,
      right: states[57].product,
      product: new Matrix(7, 1)
    };
    states[59] = {
      name: 'add',
      left: states[58].product,
      right: json.hiddenLayers[2].forgetBias,
      product: new Matrix(7, 1)
    };
    states[60] = {
      name: 'sigmoid',
      left: states[59].product,
      right: null,
      product: new Matrix(7, 1)
    };
    states[61] = {
      name: 'multiply',
      left: json.hiddenLayers[2].outputMatrix,
      right: states[50].product,
      product: new Matrix(7, 1)
    };
    states[62] = {
      name: 'multiply',
      left: json.hiddenLayers[2].outputHidden,
      right: states[52].right,
      product: new Matrix(7, 1)
    };
    states[63] = {
      name: 'add',
      left: states[61].product,
      right: states[62].product,
      product: new Matrix(7, 1)
    };
    states[64] = {
      name: 'add',
      left: states[63].product,
      right: json.hiddenLayers[2].outputBias,
      product: new Matrix(7, 1)
    };
    states[65] = {
      name: 'sigmoid',
      left: states[64].product,
      right: null,
      product: new Matrix(7, 1)
    };
    states[66] = {
      name: 'multiply',
      left: json.hiddenLayers[2].cellActivationMatrix,
      right: states[50].product,
      product: new Matrix(7, 1)
    };
    states[67] = {
      name: 'multiply',
      left: json.hiddenLayers[2].cellActivationHidden,
      right: states[52].right,
      product: new Matrix(7, 1)
    };
    states[68] = {
      name: 'add',
      left: states[66].product,
      right: states[67].product,
      product: new Matrix(7, 1)
    };
    states[69] = {
      name: 'add',
      left: states[68].product,
      right: json.hiddenLayers[2].cellActivationBias,
      product: new Matrix(7, 1)
    };
    states[70] = {
      name: 'tanh',
      left: states[69].product,
      right: null,
      product: new Matrix(7, 1)
    };
    states[71] = {
      name: 'multiplyElement',
      left: states[60].product,
      right: states[52].right,
      product: new Matrix(7, 1)
    };
    states[72] = {
      name: 'multiplyElement',
      left: states[55].product,
      right: states[70].product,
      product: new Matrix(7, 1)
    };
    states[73] = {
      name: 'add',
      left: states[71].product,
      right: states[72].product,
      product: new Matrix(7, 1)
    };
    states[74] = {
      name: 'tanh',
      left: states[73].product,
      right: null,
      product: new Matrix(7, 1)
    };
    states[75] = {
      name: 'multiplyElement',
      left: states[65].product,
      right: states[74].product,
      product: new Matrix(7, 1)
    };
    states[76] = {
      name: 'multiply',
      left: json.hiddenLayers[3].inputMatrix,
      right: states[75].product,
      product: new Matrix(2, 1)
    };
    states[77] = {
      name: 'multiply',
      left: json.hiddenLayers[3].inputHidden,
      right: typeof prevStates[100] === 'object' ? prevStates[100].product : new Matrix(2, 1),
      product: new Matrix(2, 1)
    };
    states[78] = {
      name: 'add',
      left: states[76].product,
      right: states[77].product,
      product: new Matrix(2, 1)
    };
    states[79] = {
      name: 'add',
      left: states[78].product,
      right: json.hiddenLayers[3].inputBias,
      product: new Matrix(2, 1)
    };
    states[80] = {
      name: 'sigmoid',
      left: states[79].product,
      right: null,
      product: new Matrix(2, 1)
    };
    states[81] = {
      name: 'multiply',
      left: json.hiddenLayers[3].forgetMatrix,
      right: states[75].product,
      product: new Matrix(2, 1)
    };
    states[82] = {
      name: 'multiply',
      left: json.hiddenLayers[3].forgetHidden,
      right: states[77].right,
      product: new Matrix(2, 1)
    };
    states[83] = {
      name: 'add',
      left: states[81].product,
      right: states[82].product,
      product: new Matrix(2, 1)
    };
    states[84] = {
      name: 'add',
      left: states[83].product,
      right: json.hiddenLayers[3].forgetBias,
      product: new Matrix(2, 1)
    };
    states[85] = {
      name: 'sigmoid',
      left: states[84].product,
      right: null,
      product: new Matrix(2, 1)
    };
    states[86] = {
      name: 'multiply',
      left: json.hiddenLayers[3].outputMatrix,
      right: states[75].product,
      product: new Matrix(2, 1)
    };
    states[87] = {
      name: 'multiply',
      left: json.hiddenLayers[3].outputHidden,
      right: states[77].right,
      product: new Matrix(2, 1)
    };
    states[88] = {
      name: 'add',
      left: states[86].product,
      right: states[87].product,
      product: new Matrix(2, 1)
    };
    states[89] = {
      name: 'add',
      left: states[88].product,
      right: json.hiddenLayers[3].outputBias,
      product: new Matrix(2, 1)
    };
    states[90] = {
      name: 'sigmoid',
      left: states[89].product,
      right: null,
      product: new Matrix(2, 1)
    };
    states[91] = {
      name: 'multiply',
      left: json.hiddenLayers[3].cellActivationMatrix,
      right: states[75].product,
      product: new Matrix(2, 1)
    };
    states[92] = {
      name: 'multiply',
      left: json.hiddenLayers[3].cellActivationHidden,
      right: states[77].right,
      product: new Matrix(2, 1)
    };
    states[93] = {
      name: 'add',
      left: states[91].product,
      right: states[92].product,
      product: new Matrix(2, 1)
    };
    states[94] = {
      name: 'add',
      left: states[93].product,
      right: json.hiddenLayers[3].cellActivationBias,
      product: new Matrix(2, 1)
    };
    states[95] = {
      name: 'tanh',
      left: states[94].product,
      right: null,
      product: new Matrix(2, 1)
    };
    states[96] = {
      name: 'multiplyElement',
      left: states[85].product,
      right: states[77].right,
      product: new Matrix(2, 1)
    };
    states[97] = {
      name: 'multiplyElement',
      left: states[80].product,
      right: states[95].product,
      product: new Matrix(2, 1)
    };
    states[98] = {
      name: 'add',
      left: states[96].product,
      right: states[97].product,
      product: new Matrix(2, 1)
    };
    states[99] = {
      name: 'tanh',
      left: states[98].product,
      right: null,
      product: new Matrix(2, 1)
    };
    states[100] = {
      name: 'multiplyElement',
      left: states[90].product,
      right: states[99].product,
      product: new Matrix(2, 1)
    };
    states[101] = {
      name: 'multiply',
      left: json.outputConnector,
      right: states[100].product,
      product: new Matrix(2, 1)
    };
    states[102] = {
      name: 'add',
      left: states[101].product,
      right: json.output,
      product: new Matrix(2, 1)
    };
    for (var stateIndex = 0, stateMax = 103; stateIndex < stateMax; stateIndex++) {
      state = states[stateIndex];
      var product = state.product;
      var left = state.left;
      var right = state.right;

      switch (state.name) {
        case 'forwardFn':
          
                  product.weights = _input.weights = _this.inputValue;
                
          break;
        case 'multiply': //compiled from src/recurrent/matrix/multiply.js
          
          var leftRows = left.rows;
          var leftColumns = left.columns;
          var rightColumns = right.columns; // loop over rows of left
        
          for (var leftRow = 0; leftRow < leftRows; leftRow++) {
            var leftRowBase = leftColumns * leftRow;
            var rightRowBase = rightColumns * leftRow; // loop over cols of right
        
            for (var rightColumn = 0; rightColumn < rightColumns; rightColumn++) {
              // dot product loop
              var dot = 0; // loop over columns of left
        
              for (var leftColumn = 0; leftColumn < leftColumns; leftColumn++) {
                var rightColumnBase = rightColumns * leftColumn;
                var leftIndex = leftRowBase + leftColumn;
                var rightIndex = rightColumnBase + rightColumn;
                dot += left.weights[leftIndex] * right.weights[rightIndex];
                
                
              }
        
              product.weights[rightRowBase + rightColumn] = dot;
            }
          }
        
          break;
        case 'add': //compiled from src/recurrent/matrix/add.js
          
          for (var i = 0; i < left.weights.length; i++) {
            product.weights[i] = left.weights[i] + right.weights[i];
            
          }
        
          break;
        case 'sigmoid': //compiled from src/recurrent/matrix/sigmoid.js
          
          // sigmoid nonlinearity
          for (var i = 0; i < left.weights.length; i++) {
            product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));
            
          }
        
          break;
        case 'tanh': //compiled from src/recurrent/matrix/tanh.js
          
          // tanh nonlinearity
          for (var i = 0; i < left.weights.length; i++) {
            product.weights[i] = Math.tanh(left.weights[i]);
            
          }
        
          break;
        case 'multiplyElement': //compiled from src/recurrent/matrix/multiply-element.js
          
          var weights = left.weights;
        
          for (var i = 0; i < weights.length; i++) {
            product.weights[i] = left.weights[i] * right.weights[i];
            
          }
        
          break;
      }
    }
    output = state.product.weights;
  }
  return lookupOutputPartial(output, input);
  function lookupInput(rawInputs) {
        var table = {"unidades":0,"precio":1};
        var result = [];
        for (var i = 0; i < rawInputs.length; i++) {
          var rawInput = rawInputs[i];
          var input = new Float32Array(2);
          for (var p in table) {
            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;
          }
          result.push(input);
        }
        return result;
      }
  function lookupOutput(output) {
        var table = {"unidades":0,"precio":1};
        var result = {};
        for (var p in table) {
          result[p] = output[table[p]];
        }
        return result;
      }

  function Matrix(rows, columns) {
    this.rows = rows;
    this.columns = columns;
    this.weights = zeros(rows * columns);
  }
  function zeros(size) {
  return new Float32Array(size);
}
  function softmax(m) {
  var result = new matrix(m.rows, m.columns); // probability volume

  var maxVal = -999999;

  for (var i = 0; i < m.weights.length; i++) {
    if (m.weights[i] > maxVal) {
      maxVal = m.weights[i];
    }
  }

  var s = 0;

  for (var _i = 0; _i < m.weights.length; _i++) {
    result.weights[_i] = Math.exp(m.weights[_i] - maxVal);
    s += result.weights[_i];
  }

  for (var _i2 = 0; _i2 < m.weights.length; _i2++) {
    result.weights[_i2] /= s;
  } // no backward pass here needed
  // since we will use the computed probabilities outside
  // to set gradients directly on m


  return result;
}
  function randomFloat(a, b) {
  return Math.random() * (b - a) + a;
}
  function sampleI(m) {
  // sample argmax from w, assuming w are
  // probabilities that sum to one
  var r = randomFloat$3(0, 1);
  var x = 0;
  var i = 0;
  var w = m.weights;

  while (true) {
    x += w[i];

    if (x > r) {
      return i;
    }

    i++;
  }
}
  function maxI(m) {
  // argmax of array w
  var weights = m.weights;
  var maxv = weights[0];
  var maxix = 0;

  for (var i = 1; i < weights.length; i++) {
    var v = weights[i];
    if (v < maxv) continue;
    maxix = i;
    maxv = v;
  }

  return maxix;
}
};